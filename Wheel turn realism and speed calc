using System.Threading;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;

public class wheelturn : MonoBehaviour
{
    int speedshow = 0;
    public TMP_Text speedshower;
    public string speedstring = "";
    public void speedcalcshow()
    {
        speedshower.SetText(speedstring);
    }



    [SerializeField] private WheelCollider[] _wheelColliders;
    float rpms = 0;
    public float speed = 0;
    public float timer = 0;
    // Start is called once before the first execution of Update after the MonoBehaviour is created
    void Start()
    {
        
    }

    // Update is called once per frame
    
    public void speedcalc()
    {
        if(timer < 50)
        {
            timer = timer + 1;
        }
        else
        {
            speed = rpms / 10;
            timer = 0;
            int speedshow = (int)speed;
            speedstring = speedshow.ToString();
            
        }
        
    }
    //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    public float tps = 0;
    //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    private void rotatewheel()
    {
        Quaternion quaternion;
        Vector3 position;

        foreach (var wheel in _wheelColliders)
        {
            wheel.GetWorldPose(out position, out quaternion);

            
            wheel.transform.GetChild(0).transform.rotation = quaternion;
            rpms = wheel.rpm;
        }
    }

    
    //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //Updates program every tick causing the object to rotate through the code
    //embedded within the void update()
    private void Update()
    //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    {
        rotatewheel();
        



        //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    }
    private void LateUpdate()
    {
        speedcalc();
        speedcalcshow();
    }
}
